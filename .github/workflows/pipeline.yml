name: Deployment pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
    types: [opened, synchronize]
    
jobs:
  simple_deployment:
    runs-on: ubuntu-latest
    env:
      SKIP_DEPLOY: ${{ contains(join(github.event.commits.*.message, ' '), '#skip') && 'true' || 'false' }}
    outputs:
      skip_deploy: ${{ env.SKIP_DEPLOY }}
      deployed_url: ${{ steps.deploy.outputs.deployed_url }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Start MongoDB
        uses: supercharge/mongodb-github-action@1.10.0
        with:
          mongodb-version: '4.4'

      - name: Get Committer Username
        id: get_username
        run: |
          git log -5
          COMMITTER_NAME=$(git log -2 --pretty=format:'%an' | tail -n 1)
          echo "Committer Name: $COMMITTER_NAME"
          echo "username=$COMMITTER_NAME" >> $GITHUB_OUTPUT

      - name: Install Dependencies
        run: |
          npm install
          cd frontend && npm install

      - name: Check style
        run: |
          npm run lint
          cd frontend && npm run eslint
      
      - name: Run Backend Jest Test
        env:
          MONGODB_URI: ${{ secrets.MONGODB_URI }}
          TEST_MONGODB_URI: ${{ secrets.TEST_MONGODB_URI }}
          PORT: 3003
          SECRET: ${{ secrets.MONGODB_SECRET }}
        run: |
          npm run test

      - name: Run Frontend Jest Test
        run: |
          cd frontend && npm run test

      - name: Start Backend for e2e Tests
        env:
          TEST_MONGODB_URI: ${{ secrets.TEST_MONGODB_URI }}
          PORT: 3003
          SECRET: ${{ secrets.MONGODB_SECRET }}
        run: npm run start:backend-cypress-prep &
        
      - name: Start Frontend for e2e Tests
        run: npm run start:frontend-cypress-prep &
      
      - name: Run Cypress e2e test
        uses: cypress-io/github-action@v5
        with:
          command: npm run start:cypress-test
          wait-on: http://localhost:3000
        
      - name: Build Frontend
        id: build
        run: |
          cd frontend
          npm run build
          cd ..
          cp -r frontend/build .

      - name: Broadcast to Discord if build failed
        if: ${{ failure() && steps.build.outcome == 'failure' }}
        uses: rjstone/discord-webhook-notify@v1
        with:
          severity: error
          text: Build failed!
          description: |
            commit
            https://github.com/${{ github.repository }}/commit/${{ github.event.pull_request.head.sha }} by ${{ steps.get_username.outputs.username }} broke the build.
          details: ''
          webhookUrl: ${{ secrets.DISCORD_WEBHOOK }}